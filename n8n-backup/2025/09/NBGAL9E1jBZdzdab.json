{
  "active": false,
  "connections": {
    "n8n": {
      "main": [
        [
          {
            "node": "Find new workflows",
            "type": "main",
            "index": 0
          },
          {
            "node": "Find updated workflows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter empty data": {
      "main": [
        [
          {
            "node": "Create new commit to add new workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for finished": {
      "main": [
        [
          {
            "node": "If there are any changes in workflows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter empty data1": {
      "main": [
        [
          {
            "node": "Create new commit to update changed workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find new workflows": {
      "main": [
        [
          {
            "node": "Wait until branch created1",
            "type": "main",
            "index": 1
          },
          {
            "node": "Wait for finished",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click me to trigger": {
      "main": [
        [
          {
            "node": "Define Local Variables",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Define Local Variables": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get all workflows on GitHub",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find updated workflows": {
      "main": [
        [
          {
            "node": "Wait for finished",
            "type": "main",
            "index": 1
          },
          {
            "node": "Wait until branch created",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Wait until branch created": {
      "main": [
        [
          {
            "node": "Filter empty data1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait until branch created1": {
      "main": [
        [
          {
            "node": "Filter empty data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get all workflows on GitHub": {
      "main": [
        [
          {
            "node": "Get content for each workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new PR via GitHub API": {
      "main": [
        [
          {
            "node": "Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Base64decode workflow content": {
      "main": [
        [
          {
            "node": "Find updated workflows",
            "type": "main",
            "index": 1
          },
          {
            "node": "Find new workflows",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Get content for each workflow": {
      "main": [
        [
          {
            "node": "Base64decode workflow content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new branch via GitHub API": {
      "main": [
        [
          {
            "node": "Wait until branch created1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait until branch created",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new commit to add new workflow": {
      "main": [
        [
          {
            "node": "Wait for GitHub create/edit file finished",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If there are any changes in workflows": {
      "main": [
        [
          {
            "node": "Get latest commit SHA on main  via GitHub API",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for GitHub create/edit file finished": {
      "main": [
        [
          {
            "node": "Create new PR via GitHub API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new commit to update changed workflow": {
      "main": [
        [
          {
            "node": "Wait for GitHub create/edit file finished",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Get latest commit SHA on main  via GitHub API": {
      "main": [
        [
          {
            "node": "Create new branch via GitHub API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-15T20:15:43.945Z",
  "id": "NBGAL9E1jBZdzdab",
  "isArchived": true,
  "meta": null,
  "name": "Backup-to-github [imported]",
  "nodes": [
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "5af4d7d0-5892-472c-b744-854e5f16d5dd",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        944,
        208
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "mode": "combine",
        "fieldsToMatchString": "id",
        "joinMode": "keepNonMatches",
        "outputDataFrom": "input1",
        "options": {}
      },
      "id": "d08f0f65-a5bc-4764-bebc-203a421f6f0b",
      "name": "Find new workflows",
      "type": "n8n-nodes-base.merge",
      "position": [
        1168,
        256
      ],
      "typeVersion": 3.1,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "mode": "combine",
        "fieldsToMatchString": "id, updatedAt",
        "joinMode": "keepNonMatches",
        "outputDataFrom": "input1",
        "options": {}
      },
      "id": "cb49588a-90ad-424e-88ba-452c7164df50",
      "name": "Find updated workflows",
      "type": "n8n-nodes-base.merge",
      "position": [
        1168,
        512
      ],
      "typeVersion": 3.1,
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "id": "ab8f2482-cae4-4358-92a5-47f963af8bf3",
      "name": "Wait for GitHub create/edit file finished",
      "type": "n8n-nodes-base.merge",
      "position": [
        2960,
        368
      ],
      "typeVersion": 3.1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.github.com/repos/{{ $('Define Local Variables').item.json.github_owner }}/{{ $('Define Local Variables').item.json.repo_name }}/pulls",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "githubApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"title\": \"Automated PR for {{ $('Define Local Variables').item.json.branch_name }}\",\n\"body\": \"\",\n\"head\": \"{{ $('Define Local Variables').item.json.branch_name }}\",\n\"base\": \"main\"\n}",
        "options": {}
      },
      "id": "cb0747fd-d7f3-47cd-bf28-f1783aa2cf57",
      "name": "Create new PR via GitHub API",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        3184,
        368
      ],
      "executeOnce": true,
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "575b2ca9-528f-421f-8352-073c916fcd63",
              "name": "branch_name",
              "type": "string",
              "value": "=workflows_{{ $now.format('yyyy-MM-dd-hh-mm-ss')}}"
            },
            {
              "id": "6f7a1168-1c55-4e50-b7d2-0868104ee1db",
              "name": "github_owner",
              "type": "string",
              "value": "duynb92"
            },
            {
              "id": "9c8cf8ba-9e64-4fb5-ba38-8429264c84dd",
              "name": "repo_name",
              "type": "string",
              "value": "n8n-workflows"
            }
          ]
        },
        "options": {}
      },
      "id": "fe7cead3-5168-459f-bc88-2cc52b577f56",
      "name": "Define Local Variables",
      "type": "n8n-nodes-base.set",
      "position": [
        320,
        352
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "list",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Define Local Variables').item.json.github_owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Define Local Variables').item.json.repo_name }}"
        },
        "filePath": "workflows"
      },
      "id": "2f2296de-048e-4d45-a8f4-4e1782c07513",
      "name": "Get all workflows on GitHub",
      "type": "n8n-nodes-base.github",
      "position": [
        512,
        560
      ],
      "webhookId": "481a47c9-57bf-4c5f-a9c8-7246190c4b3c",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Define Local Variables').item.json.github_owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Define Local Variables').item.json.repo_name }}"
        },
        "filePath": "={{ $json.path }}",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "4299257c-58e3-49b4-9b50-a0e9c99f0126",
      "name": "Get content for each workflow",
      "type": "n8n-nodes-base.github",
      "position": [
        720,
        560
      ],
      "webhookId": "bfb94e71-96eb-4fc3-9fe0-1b5255d48b53",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json.content.base64Decode() }}",
        "options": {}
      },
      "id": "d49f4ebd-97d1-41cb-a792-5300baa3660e",
      "name": "Base64decode workflow content",
      "type": "n8n-nodes-base.set",
      "position": [
        944,
        560
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "output": "empty"
      },
      "id": "2565c7c1-4a1b-4e0b-968e-96fe99edb9b2",
      "name": "Wait for finished",
      "type": "n8n-nodes-base.merge",
      "position": [
        1392,
        384
      ],
      "typeVersion": 3.1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "or",
          "conditions": [
            {
              "id": "cec5563a-01dd-4372-882a-2114c8e476a7",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ $('Find updated workflows').all() }}",
              "rightValue": ""
            },
            {
              "id": "fb800963-acc7-495f-8bf2-c29c3b3d0450",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ $('Find new workflows').all() }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "105247d7-68c3-442e-899c-42ff091266fc",
      "name": "If there are any changes in workflows",
      "type": "n8n-nodes-base.if",
      "position": [
        1600,
        384
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {},
      "id": "1b30421f-20b2-4ee1-b9d0-00472bb6e29b",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1840,
        672
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.github.com/repos/{{ $('Define Local Variables').item.json.github_owner }}/{{ $('Define Local Variables').item.json.repo_name }}/git/refs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "githubApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"ref\": \"refs/heads/{{ $('Define Local Variables').item.json.branch_name }}\",\n  \"sha\": \"{{ $json.object.sha }}\"\n}",
        "options": {}
      },
      "id": "988fdc86-7761-41c6-a81f-7679728e6c39",
      "name": "Create new branch via GitHub API",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        2048,
        384
      ],
      "executeOnce": true,
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "url": "=https://api.github.com/repos/{{ $('Define Local Variables').item.json.github_owner }}/{{ $('Define Local Variables').item.json.repo_name }}/git/ref/heads/main",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "githubApi",
        "options": {}
      },
      "id": "2da633ae-e5df-4f9b-8106-8ec296970006",
      "name": "Get latest commit SHA on main  via GitHub API",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1824,
        384
      ],
      "executeOnce": true,
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "id": "0a4da880-a33f-4574-874c-d557c7fafe20",
      "name": "Wait until branch created",
      "type": "n8n-nodes-base.merge",
      "position": [
        2272,
        512
      ],
      "typeVersion": 3.1,
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "id": "925f6540-e46c-4f99-9331-f6796fa4f43b",
      "name": "Wait until branch created1",
      "type": "n8n-nodes-base.merge",
      "position": [
        2272,
        256
      ],
      "typeVersion": 3.1,
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "835f2dab-de42-4c97-a747-47b23d55c990",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ $json.id }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "88acac9f-220a-4647-ba6c-b81e3cc2bf1c",
      "name": "Filter empty data",
      "type": "n8n-nodes-base.filter",
      "position": [
        2480,
        256
      ],
      "notesInFlow": true,
      "typeVersion": 2.2,
      "notes": "Empty data can happen because 'Find new workflows' always output data"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "1d8312fd-5157-4058-823c-35f7574541fa",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ $json.id }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "df1aad8b-d689-43c6-b6ca-180751334be3",
      "name": "Filter empty data1",
      "type": "n8n-nodes-base.filter",
      "position": [
        2480,
        512
      ],
      "notesInFlow": true,
      "typeVersion": 2.2,
      "notes": "Empty data can happen because 'Find updated workflows' always output data"
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Define Local Variables').item.json.github_owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Define Local Variables').item.json.repo_name }}"
        },
        "filePath": "=workflows/{{ $json.id }}.json",
        "fileContent": "={{ $json.toJsonString() }}",
        "commitMessage": "=Add new workflow {{ $json.id }}",
        "additionalParameters": {
          "branch": {
            "branch": "={{ $('Define Local Variables').item.json.branch_name }}"
          }
        }
      },
      "id": "0d805d1e-83d5-4e9b-8fa4-28da6e2150b5",
      "name": "Create new commit to add new workflow",
      "type": "n8n-nodes-base.github",
      "position": [
        2704,
        256
      ],
      "webhookId": "843c09e3-953a-40c4-a208-38acdd2ea466",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Define Local Variables').item.json.github_owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Define Local Variables').item.json.repo_name }}"
        },
        "filePath": "=workflows/{{ $json.id }}.json",
        "fileContent": "={{ $json.toJsonString() }}",
        "commitMessage": "=Update workflow {{ $json.id }}",
        "additionalParameters": {
          "branch": {
            "branch": "={{ $('Define Local Variables').item.json.branch_name }}"
          }
        }
      },
      "id": "13f6500f-df4c-4c28-9871-b6705813a07c",
      "name": "Create new commit to update changed workflow",
      "type": "n8n-nodes-base.github",
      "position": [
        2704,
        512
      ],
      "webhookId": "843c09e3-953a-40c4-a208-38acdd2ea466",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "mode": "list",
          "value": "C08NZ6D9CRF",
          "cachedResultName": "n8n-notifications"
        },
        "text": "=:firework: {{ $workflow.name }} executed succesfully. \nIt created a new <{{ $json.html_url }}|GitHub PR>.",
        "otherOptions": {}
      },
      "id": "51b475b9-c00c-442a-b44f-d01167c554ec",
      "name": "Slack",
      "type": "n8n-nodes-base.slack",
      "position": [
        3408,
        368
      ],
      "webhookId": "799530a9-9c2f-482e-9265-a2d58663223e",
      "typeVersion": 2.3
    },
    {
      "parameters": {},
      "id": "ab709bb5-c3df-49a4-b701-b0d07077b9e2",
      "name": "Click me to trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        80,
        352
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Setup\n1. GitHub credentials: Add your GitHub API credentials in n8n.\n2. Slack integration: Connect your Slack Bot token if you want PR notifications.\n3. Repository details: Update github_owner, repo_name, and workflow directory path in the “Define Local Variables” node.\n4. n8n API key - [Check this doc](https://docs.n8n.io/api/authentication/)",
        "height": 260,
        "width": 280
      },
      "id": "c8fa28de-1bc6-4120-ac26-fb72ce59f99c",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "repo_name": "ai-agents",
  "repo_owner": "concosminx",
  "repo_path": "n8n-backup",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-15T20:15:43.945Z",
      "updatedAt": "2025-09-15T20:15:43.945Z",
      "role": "workflow:owner",
      "workflowId": "NBGAL9E1jBZdzdab",
      "projectId": "xcywV0hidlkrSz4y"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-09-16T16:27:44.544Z",
  "versionId": "20d459b6-f98f-4dd0-ade1-f35305d226a7"
}